version: "3.3"
services:
  reverse-proxy: 
    image: "traefik"
    links:
    - "api"
    - "doc"
    command:
    - "--api.insecure=true"
    - "--providers.docker=true"
    - "--providers.docker.exposedbydefault=false"
    - "--entrypoints.web.address=:80"
    ports:
    - 443:443
    - 80:80
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
  api:
    image: "ghcr.io/la-sectoblique/septotrip-api:master"
    restart: always
    links:
    - postgres
    environment:
      NODE_ENV: production
      API_PORT: 80
      POSTGRES_HOST: postgres
      POSTGRES_DB: septo-prod
      POSTGRES_USER: sept-api
      POSTGRES_PASSWORD: palila
      POSTGRES_PORT: 5432
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.api.rule=Host(`api.${URL}`)"
    - "traefik.http.services.api.loadbalancer.server.port=80"
    - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginListRegex=(.*?)"
  postgres:
    image: "postgis/postgis"
    restart: always
    environment:
      POSTGRES_DB: septo-prod
      POSTGRES_USER: sept-api
      POSTGRES_PASSWORD: palila
  doc: 
    image: "ghcr.io/la-sectoblique/septrotrip-service:master"
    restart: always
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.doc.rule=Host(`doc.${URL}`)"
    - "traefik.http.services.doc.loadbalancer.server.port=80"
    - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginListRegex=(.*?)"